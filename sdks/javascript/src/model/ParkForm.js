/**
 * Walt Disney World API
 * An api that encompasses the Walt Disney World Resort parks, rides, resorts, and restaurants. This API follows the OpenAPI standard.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@disapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.WaltDisneyWorldApi) {
      root.WaltDisneyWorldApi = {};
    }
    root.WaltDisneyWorldApi.ParkForm = factory(root.WaltDisneyWorldApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ParkForm model module.
   * @module model/ParkForm
   * @version 0.1.0
   */

  /**
   * Constructs a new <code>ParkForm</code>.
   * @alias module:model/ParkForm
   * @class
   */
  var exports = function() {
    var _this = this;









  };

  /**
   * Constructs a <code>ParkForm</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ParkForm} obj Optional instance to populate.
   * @return {module:model/ParkForm} The populated <code>ParkForm</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('centralAttraction')) {
        obj['centralAttraction'] = ApiClient.convertToType(data['centralAttraction'], 'String');
      }
      if (data.hasOwnProperty('yearOpened')) {
        obj['yearOpened'] = ApiClient.convertToType(data['yearOpened'], 'Number');
      }
      if (data.hasOwnProperty('rideCount')) {
        obj['rideCount'] = ApiClient.convertToType(data['rideCount'], 'Number');
      }
      if (data.hasOwnProperty('restaurantCount')) {
        obj['restaurantCount'] = ApiClient.convertToType(data['restaurantCount'], 'Number');
      }
      if (data.hasOwnProperty('resortCount')) {
        obj['resortCount'] = ApiClient.convertToType(data['resortCount'], 'Number');
      }
      if (data.hasOwnProperty('size')) {
        obj['size'] = ApiClient.convertToType(data['size'], 'Number');
      }
      if (data.hasOwnProperty('fireworks')) {
        obj['fireworks'] = ApiClient.convertToType(data['fireworks'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {String} centralAttraction
   */
  exports.prototype['centralAttraction'] = undefined;
  /**
   * @member {Number} yearOpened
   */
  exports.prototype['yearOpened'] = undefined;
  /**
   * @member {Number} rideCount
   */
  exports.prototype['rideCount'] = undefined;
  /**
   * @member {Number} restaurantCount
   */
  exports.prototype['restaurantCount'] = undefined;
  /**
   * @member {Number} resortCount
   */
  exports.prototype['resortCount'] = undefined;
  /**
   * @member {Number} size
   */
  exports.prototype['size'] = undefined;
  /**
   * @member {Boolean} fireworks
   */
  exports.prototype['fireworks'] = undefined;



  return exports;
}));


