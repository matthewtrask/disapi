/**
 * Walt Disney World API
 * An api that encompasses the Walt Disney World Resort parks, rides, resorts, and restaurants. This API follows the OpenAPI standard.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@disapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 3.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InlineResponse200', 'model/InlineResponse2001', 'model/InlineResponse2002', 'model/InlineResponse2003', 'model/InlineResponse2004', 'model/InlineResponse2005', 'model/InlineResponse2006', 'model/InlineResponse2007', 'model/Park', 'model/ParkForm', 'model/Parks', 'model/Resort', 'model/ResortForm', 'model/Resorts', 'model/Restaurant', 'model/RestaurantForm', 'model/Restaurants', 'model/Ride', 'model/RideForm', 'model/Rides', 'api/ParksApi', 'api/ResortsApi', 'api/RestaurantsApi', 'api/RidesApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/InlineResponse200'), require('./model/InlineResponse2001'), require('./model/InlineResponse2002'), require('./model/InlineResponse2003'), require('./model/InlineResponse2004'), require('./model/InlineResponse2005'), require('./model/InlineResponse2006'), require('./model/InlineResponse2007'), require('./model/Park'), require('./model/ParkForm'), require('./model/Parks'), require('./model/Resort'), require('./model/ResortForm'), require('./model/Resorts'), require('./model/Restaurant'), require('./model/RestaurantForm'), require('./model/Restaurants'), require('./model/Ride'), require('./model/RideForm'), require('./model/Rides'), require('./api/ParksApi'), require('./api/ResortsApi'), require('./api/RestaurantsApi'), require('./api/RidesApi'));
  }
}(function(ApiClient, InlineResponse200, InlineResponse2001, InlineResponse2002, InlineResponse2003, InlineResponse2004, InlineResponse2005, InlineResponse2006, InlineResponse2007, Park, ParkForm, Parks, Resort, ResortForm, Resorts, Restaurant, RestaurantForm, Restaurants, Ride, RideForm, Rides, ParksApi, ResortsApi, RestaurantsApi, RidesApi) {
  'use strict';

  /**
   * An_api_that_encompasses_the_Walt_Disney_World_Resort_parks_rides_resorts_and_restaurants__This_API_follows_the_OpenAPI_standard_.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var WaltDisneyWorldApi = require('index'); // See note below*.
   * var xxxSvc = new WaltDisneyWorldApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new WaltDisneyWorldApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new WaltDisneyWorldApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new WaltDisneyWorldApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 0.1.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The InlineResponse200 model constructor.
     * @property {module:model/InlineResponse200}
     */
    InlineResponse200: InlineResponse200,
    /**
     * The InlineResponse2001 model constructor.
     * @property {module:model/InlineResponse2001}
     */
    InlineResponse2001: InlineResponse2001,
    /**
     * The InlineResponse2002 model constructor.
     * @property {module:model/InlineResponse2002}
     */
    InlineResponse2002: InlineResponse2002,
    /**
     * The InlineResponse2003 model constructor.
     * @property {module:model/InlineResponse2003}
     */
    InlineResponse2003: InlineResponse2003,
    /**
     * The InlineResponse2004 model constructor.
     * @property {module:model/InlineResponse2004}
     */
    InlineResponse2004: InlineResponse2004,
    /**
     * The InlineResponse2005 model constructor.
     * @property {module:model/InlineResponse2005}
     */
    InlineResponse2005: InlineResponse2005,
    /**
     * The InlineResponse2006 model constructor.
     * @property {module:model/InlineResponse2006}
     */
    InlineResponse2006: InlineResponse2006,
    /**
     * The InlineResponse2007 model constructor.
     * @property {module:model/InlineResponse2007}
     */
    InlineResponse2007: InlineResponse2007,
    /**
     * The Park model constructor.
     * @property {module:model/Park}
     */
    Park: Park,
    /**
     * The ParkForm model constructor.
     * @property {module:model/ParkForm}
     */
    ParkForm: ParkForm,
    /**
     * The Parks model constructor.
     * @property {module:model/Parks}
     */
    Parks: Parks,
    /**
     * The Resort model constructor.
     * @property {module:model/Resort}
     */
    Resort: Resort,
    /**
     * The ResortForm model constructor.
     * @property {module:model/ResortForm}
     */
    ResortForm: ResortForm,
    /**
     * The Resorts model constructor.
     * @property {module:model/Resorts}
     */
    Resorts: Resorts,
    /**
     * The Restaurant model constructor.
     * @property {module:model/Restaurant}
     */
    Restaurant: Restaurant,
    /**
     * The RestaurantForm model constructor.
     * @property {module:model/RestaurantForm}
     */
    RestaurantForm: RestaurantForm,
    /**
     * The Restaurants model constructor.
     * @property {module:model/Restaurants}
     */
    Restaurants: Restaurants,
    /**
     * The Ride model constructor.
     * @property {module:model/Ride}
     */
    Ride: Ride,
    /**
     * The RideForm model constructor.
     * @property {module:model/RideForm}
     */
    RideForm: RideForm,
    /**
     * The Rides model constructor.
     * @property {module:model/Rides}
     */
    Rides: Rides,
    /**
     * The ParksApi service constructor.
     * @property {module:api/ParksApi}
     */
    ParksApi: ParksApi,
    /**
     * The ResortsApi service constructor.
     * @property {module:api/ResortsApi}
     */
    ResortsApi: ResortsApi,
    /**
     * The RestaurantsApi service constructor.
     * @property {module:api/RestaurantsApi}
     */
    RestaurantsApi: RestaurantsApi,
    /**
     * The RidesApi service constructor.
     * @property {module:api/RidesApi}
     */
    RidesApi: RidesApi
  };

  return exports;
}));
