=begin
#Walt Disney World API

#An api that encompasses the Walt Disney World Resort parks, rides, resorts, and restaurants. This API follows the OpenAPI standard.

OpenAPI spec version: 0.1.0
Contact: support@disapi.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.2.3

=end

require 'uri'

module OpenapiClient
  class ResortsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a new resort resource
    # Create a new resort resource for the Walt Disney World Resort
    # @param [Hash] opts the optional parameters
    # @option opts [String] :name 
    # @option opts [Integer] :park_id 
    # @option opts [Integer] :opening_year 
    # @option opts [String] :resort_type 
    # @option opts [String] :transport_options 
    # @option opts [String] :category 
    # @option opts [Integer] :num_of_rooms 
    # @option opts [BOOLEAN] :quick_service_restaurants 
    # @option opts [BOOLEAN] :table_service_restaurants 
    # @option opts [BOOLEAN] :gift_shop 
    # @option opts [BOOLEAN] :arcade 
    # @option opts [BOOLEAN] :pool 
    # @return [nil]
    def create_resort(opts = {})
      create_resort_with_http_info(opts)
      nil
    end

    # Create a new resort resource
    # Create a new resort resource for the Walt Disney World Resort
    # @param [Hash] opts the optional parameters
    # @option opts [String] :name 
    # @option opts [Integer] :park_id 
    # @option opts [Integer] :opening_year 
    # @option opts [String] :resort_type 
    # @option opts [String] :transport_options 
    # @option opts [String] :category 
    # @option opts [Integer] :num_of_rooms 
    # @option opts [BOOLEAN] :quick_service_restaurants 
    # @option opts [BOOLEAN] :table_service_restaurants 
    # @option opts [BOOLEAN] :gift_shop 
    # @option opts [BOOLEAN] :arcade 
    # @option opts [BOOLEAN] :pool 
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def create_resort_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ResortsApi.create_resort ...'
      end
      # resource path
      local_var_path = '/resorts'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params['name'] = opts[:'name'] if !opts[:'name'].nil?
      form_params['parkId'] = opts[:'park_id'] if !opts[:'park_id'].nil?
      form_params['openingYear'] = opts[:'opening_year'] if !opts[:'opening_year'].nil?
      form_params['resortType'] = opts[:'resort_type'] if !opts[:'resort_type'].nil?
      form_params['transportOptions'] = opts[:'transport_options'] if !opts[:'transport_options'].nil?
      form_params['category'] = opts[:'category'] if !opts[:'category'].nil?
      form_params['numOfRooms'] = opts[:'num_of_rooms'] if !opts[:'num_of_rooms'].nil?
      form_params['quickServiceRestaurants'] = opts[:'quick_service_restaurants'] if !opts[:'quick_service_restaurants'].nil?
      form_params['tableServiceRestaurants'] = opts[:'table_service_restaurants'] if !opts[:'table_service_restaurants'].nil?
      form_params['giftShop'] = opts[:'gift_shop'] if !opts[:'gift_shop'].nil?
      form_params['arcade'] = opts[:'arcade'] if !opts[:'arcade'].nil?
      form_params['pool'] = opts[:'pool'] if !opts[:'pool'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ResortsApi#create_resort\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete resort resource by ID
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_resort(opts = {})
      delete_resort_with_http_info(opts)
      nil
    end

    # Delete resort resource by ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_resort_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ResortsApi.delete_resort ...'
      end
      # resource path
      local_var_path = '/resorts/{id}'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ResortsApi#delete_resort\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Edit a specific resort resource by ID
    # Find and edit a specific resort resource by its ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :name 
    # @option opts [Integer] :park_id 
    # @option opts [Integer] :opening_year 
    # @option opts [String] :resort_type 
    # @option opts [String] :transport_options 
    # @option opts [String] :category 
    # @option opts [Integer] :num_of_rooms 
    # @option opts [BOOLEAN] :quick_service_restaurants 
    # @option opts [BOOLEAN] :table_service_restaurants 
    # @option opts [BOOLEAN] :gift_shop 
    # @option opts [BOOLEAN] :arcade 
    # @option opts [BOOLEAN] :pool 
    # @return [nil]
    def edit_resort(opts = {})
      edit_resort_with_http_info(opts)
      nil
    end

    # Edit a specific resort resource by ID
    # Find and edit a specific resort resource by its ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :name 
    # @option opts [Integer] :park_id 
    # @option opts [Integer] :opening_year 
    # @option opts [String] :resort_type 
    # @option opts [String] :transport_options 
    # @option opts [String] :category 
    # @option opts [Integer] :num_of_rooms 
    # @option opts [BOOLEAN] :quick_service_restaurants 
    # @option opts [BOOLEAN] :table_service_restaurants 
    # @option opts [BOOLEAN] :gift_shop 
    # @option opts [BOOLEAN] :arcade 
    # @option opts [BOOLEAN] :pool 
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def edit_resort_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ResortsApi.edit_resort ...'
      end
      # resource path
      local_var_path = '/resorts/{id}'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params['name'] = opts[:'name'] if !opts[:'name'].nil?
      form_params['parkId'] = opts[:'park_id'] if !opts[:'park_id'].nil?
      form_params['openingYear'] = opts[:'opening_year'] if !opts[:'opening_year'].nil?
      form_params['resortType'] = opts[:'resort_type'] if !opts[:'resort_type'].nil?
      form_params['transportOptions'] = opts[:'transport_options'] if !opts[:'transport_options'].nil?
      form_params['category'] = opts[:'category'] if !opts[:'category'].nil?
      form_params['numOfRooms'] = opts[:'num_of_rooms'] if !opts[:'num_of_rooms'].nil?
      form_params['quickServiceRestaurants'] = opts[:'quick_service_restaurants'] if !opts[:'quick_service_restaurants'].nil?
      form_params['tableServiceRestaurants'] = opts[:'table_service_restaurants'] if !opts[:'table_service_restaurants'].nil?
      form_params['giftShop'] = opts[:'gift_shop'] if !opts[:'gift_shop'].nil?
      form_params['arcade'] = opts[:'arcade'] if !opts[:'arcade'].nil?
      form_params['pool'] = opts[:'pool'] if !opts[:'pool'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ResortsApi#edit_resort\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List a specific resort resource by ID
    # Get a specific resort resource by ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :name 
    # @option opts [Integer] :park_id 
    # @option opts [Integer] :opening_year 
    # @option opts [String] :resort_type 
    # @option opts [String] :transport_options 
    # @option opts [String] :category 
    # @option opts [Integer] :num_of_rooms 
    # @option opts [BOOLEAN] :quick_service_restaurants 
    # @option opts [BOOLEAN] :table_service_restaurants 
    # @option opts [BOOLEAN] :gift_shop 
    # @option opts [BOOLEAN] :arcade 
    # @option opts [BOOLEAN] :pool 
    # @return [InlineResponse2001]
    def get_resort(opts = {})
      data, _status_code, _headers = get_resort_with_http_info(opts)
      data
    end

    # List a specific resort resource by ID
    # Get a specific resort resource by ID
    # @param [Hash] opts the optional parameters
    # @option opts [String] :name 
    # @option opts [Integer] :park_id 
    # @option opts [Integer] :opening_year 
    # @option opts [String] :resort_type 
    # @option opts [String] :transport_options 
    # @option opts [String] :category 
    # @option opts [Integer] :num_of_rooms 
    # @option opts [BOOLEAN] :quick_service_restaurants 
    # @option opts [BOOLEAN] :table_service_restaurants 
    # @option opts [BOOLEAN] :gift_shop 
    # @option opts [BOOLEAN] :arcade 
    # @option opts [BOOLEAN] :pool 
    # @return [Array<(InlineResponse2001, Fixnum, Hash)>] InlineResponse2001 data, response status code and response headers
    def get_resort_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ResortsApi.get_resort ...'
      end
      # resource path
      local_var_path = '/resorts/{id}'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/x-www-form-urlencoded'])

      # form parameters
      form_params = {}
      form_params['name'] = opts[:'name'] if !opts[:'name'].nil?
      form_params['parkId'] = opts[:'park_id'] if !opts[:'park_id'].nil?
      form_params['openingYear'] = opts[:'opening_year'] if !opts[:'opening_year'].nil?
      form_params['resortType'] = opts[:'resort_type'] if !opts[:'resort_type'].nil?
      form_params['transportOptions'] = opts[:'transport_options'] if !opts[:'transport_options'].nil?
      form_params['category'] = opts[:'category'] if !opts[:'category'].nil?
      form_params['numOfRooms'] = opts[:'num_of_rooms'] if !opts[:'num_of_rooms'].nil?
      form_params['quickServiceRestaurants'] = opts[:'quick_service_restaurants'] if !opts[:'quick_service_restaurants'].nil?
      form_params['tableServiceRestaurants'] = opts[:'table_service_restaurants'] if !opts[:'table_service_restaurants'].nil?
      form_params['giftShop'] = opts[:'gift_shop'] if !opts[:'gift_shop'].nil?
      form_params['arcade'] = opts[:'arcade'] if !opts[:'arcade'].nil?
      form_params['pool'] = opts[:'pool'] if !opts[:'pool'].nil?

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse2001')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ResortsApi#get_resort\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # List resorts at Walt Disney World
    # Get a list of resorts at Walt Disney World
    # @param [Hash] opts the optional parameters
    # @return [InlineResponse200]
    def get_resorts(opts = {})
      data, _status_code, _headers = get_resorts_with_http_info(opts)
      data
    end

    # List resorts at Walt Disney World
    # Get a list of resorts at Walt Disney World
    # @param [Hash] opts the optional parameters
    # @return [Array<(InlineResponse200, Fixnum, Hash)>] InlineResponse200 data, response status code and response headers
    def get_resorts_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ResortsApi.get_resorts ...'
      end
      # resource path
      local_var_path = '/resorts'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = []
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'InlineResponse200')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ResortsApi#get_resorts\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

  end
end
