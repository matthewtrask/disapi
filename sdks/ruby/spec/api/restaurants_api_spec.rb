=begin
#Walt Disney World API

#An api that encompasses the Walt Disney World Resort parks, rides, resorts, and restaurants. This API follows the OpenAPI standard.

OpenAPI spec version: 0.1.0
Contact: support@disapi.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 3.2.3

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::RestaurantsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'RestaurantsApi' do
  before do
    # run before each test
    @instance = OpenapiClient::RestaurantsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of RestaurantsApi' do
    it 'should create an instance of RestaurantsApi' do
      expect(@instance).to be_instance_of(OpenapiClient::RestaurantsApi)
    end
  end

  # unit tests for create_restaurant
  # Create a new restaurant resource
  # Create a new restaurnat resource at Walt Disney World
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [Integer] :park_id 
  # @option opts [BOOLEAN] :quick_service 
  # @option opts [BOOLEAN] :table_service 
  # @option opts [BOOLEAN] :alcohol 
  # @option opts [BOOLEAN] :dining_plan 
  # @option opts [Array<String>] :meal_types 
  # @option opts [Array<String>] :food_types 
  # @return [nil]
  describe 'create_restaurant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_restaurant
  # Remove a resource from the restaurants collection
  # Remove a resource from the restaurants collection by ID
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_restaurant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for edit_restaurant
  # Edit a single restaurant resource in the collection by ID
  # Edit a restaurant by ID
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name 
  # @option opts [Integer] :park_id 
  # @option opts [BOOLEAN] :quick_service 
  # @option opts [BOOLEAN] :table_service 
  # @option opts [BOOLEAN] :alcohol 
  # @option opts [BOOLEAN] :dining_plan 
  # @option opts [Array<String>] :meal_types 
  # @option opts [Array<String>] :food_types 
  # @return [nil]
  describe 'edit_restaurant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_restaurant
  # List a single restaurant resource from the collection by ID
  # Get a single restaurant resource by ID
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2005]
  describe 'get_restaurant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_restaurants
  # List restaurants at Walt Disney World
  # Get a list of restaurants at all parks
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2004]
  describe 'get_restaurants test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
