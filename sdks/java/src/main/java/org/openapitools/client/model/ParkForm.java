/*
 * Walt Disney World API
 * An api that encompasses the Walt Disney World Resort parks, rides, resorts, and restaurants. This API follows the OpenAPI standard.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@disapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ParkForm
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2018-09-14T15:13:58.370262-07:00[America/Los_Angeles]")
public class ParkForm {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name = null;

  public static final String SERIALIZED_NAME_CENTRAL_ATTRACTION = "centralAttraction";
  @SerializedName(SERIALIZED_NAME_CENTRAL_ATTRACTION)
  private String centralAttraction = null;

  public static final String SERIALIZED_NAME_YEAR_OPENED = "yearOpened";
  @SerializedName(SERIALIZED_NAME_YEAR_OPENED)
  private Integer yearOpened = null;

  public static final String SERIALIZED_NAME_RIDE_COUNT = "rideCount";
  @SerializedName(SERIALIZED_NAME_RIDE_COUNT)
  private Integer rideCount = null;

  public static final String SERIALIZED_NAME_RESTAURANT_COUNT = "restaurantCount";
  @SerializedName(SERIALIZED_NAME_RESTAURANT_COUNT)
  private Integer restaurantCount = null;

  public static final String SERIALIZED_NAME_RESORT_COUNT = "resortCount";
  @SerializedName(SERIALIZED_NAME_RESORT_COUNT)
  private Integer resortCount = null;

  public static final String SERIALIZED_NAME_SIZE = "size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Integer size = null;

  public static final String SERIALIZED_NAME_FIREWORKS = "fireworks";
  @SerializedName(SERIALIZED_NAME_FIREWORKS)
  private Boolean fireworks = null;

  public ParkForm name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ParkForm centralAttraction(String centralAttraction) {
    this.centralAttraction = centralAttraction;
    return this;
  }

   /**
   * Get centralAttraction
   * @return centralAttraction
  **/
  @ApiModelProperty(value = "")
  public String getCentralAttraction() {
    return centralAttraction;
  }

  public void setCentralAttraction(String centralAttraction) {
    this.centralAttraction = centralAttraction;
  }

  public ParkForm yearOpened(Integer yearOpened) {
    this.yearOpened = yearOpened;
    return this;
  }

   /**
   * Get yearOpened
   * @return yearOpened
  **/
  @ApiModelProperty(value = "")
  public Integer getYearOpened() {
    return yearOpened;
  }

  public void setYearOpened(Integer yearOpened) {
    this.yearOpened = yearOpened;
  }

  public ParkForm rideCount(Integer rideCount) {
    this.rideCount = rideCount;
    return this;
  }

   /**
   * Get rideCount
   * @return rideCount
  **/
  @ApiModelProperty(value = "")
  public Integer getRideCount() {
    return rideCount;
  }

  public void setRideCount(Integer rideCount) {
    this.rideCount = rideCount;
  }

  public ParkForm restaurantCount(Integer restaurantCount) {
    this.restaurantCount = restaurantCount;
    return this;
  }

   /**
   * Get restaurantCount
   * @return restaurantCount
  **/
  @ApiModelProperty(value = "")
  public Integer getRestaurantCount() {
    return restaurantCount;
  }

  public void setRestaurantCount(Integer restaurantCount) {
    this.restaurantCount = restaurantCount;
  }

  public ParkForm resortCount(Integer resortCount) {
    this.resortCount = resortCount;
    return this;
  }

   /**
   * Get resortCount
   * @return resortCount
  **/
  @ApiModelProperty(value = "")
  public Integer getResortCount() {
    return resortCount;
  }

  public void setResortCount(Integer resortCount) {
    this.resortCount = resortCount;
  }

  public ParkForm size(Integer size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @ApiModelProperty(value = "")
  public Integer getSize() {
    return size;
  }

  public void setSize(Integer size) {
    this.size = size;
  }

  public ParkForm fireworks(Boolean fireworks) {
    this.fireworks = fireworks;
    return this;
  }

   /**
   * Get fireworks
   * @return fireworks
  **/
  @ApiModelProperty(value = "")
  public Boolean getFireworks() {
    return fireworks;
  }

  public void setFireworks(Boolean fireworks) {
    this.fireworks = fireworks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParkForm parkForm = (ParkForm) o;
    return Objects.equals(this.name, parkForm.name) &&
        Objects.equals(this.centralAttraction, parkForm.centralAttraction) &&
        Objects.equals(this.yearOpened, parkForm.yearOpened) &&
        Objects.equals(this.rideCount, parkForm.rideCount) &&
        Objects.equals(this.restaurantCount, parkForm.restaurantCount) &&
        Objects.equals(this.resortCount, parkForm.resortCount) &&
        Objects.equals(this.size, parkForm.size) &&
        Objects.equals(this.fireworks, parkForm.fireworks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, centralAttraction, yearOpened, rideCount, restaurantCount, resortCount, size, fireworks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParkForm {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    centralAttraction: ").append(toIndentedString(centralAttraction)).append("\n");
    sb.append("    yearOpened: ").append(toIndentedString(yearOpened)).append("\n");
    sb.append("    rideCount: ").append(toIndentedString(rideCount)).append("\n");
    sb.append("    restaurantCount: ").append(toIndentedString(restaurantCount)).append("\n");
    sb.append("    resortCount: ").append(toIndentedString(resortCount)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    fireworks: ").append(toIndentedString(fireworks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

