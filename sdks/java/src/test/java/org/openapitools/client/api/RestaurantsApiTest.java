/*
 * Walt Disney World API
 * An api that encompasses the Walt Disney World Resort parks, rides, resorts, and restaurants. This API follows the OpenAPI standard.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@disapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InlineResponse2004;
import org.openapitools.client.model.InlineResponse2005;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RestaurantsApi
 */
@Ignore
public class RestaurantsApiTest {

    private final RestaurantsApi api = new RestaurantsApi();

    
    /**
     * Create a new restaurant resource
     *
     * Create a new restaurnat resource at Walt Disney World
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createRestaurantTest() throws ApiException {
        String name = null;
        Integer parkId = null;
        Boolean quickService = null;
        Boolean tableService = null;
        Boolean alcohol = null;
        Boolean diningPlan = null;
        List<String> mealTypes = null;
        List<String> foodTypes = null;
        api.createRestaurant(name, parkId, quickService, tableService, alcohol, diningPlan, mealTypes, foodTypes);

        // TODO: test validations
    }
    
    /**
     * Remove a resource from the restaurants collection
     *
     * Remove a resource from the restaurants collection by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteRestaurantTest() throws ApiException {
        api.deleteRestaurant();

        // TODO: test validations
    }
    
    /**
     * Edit a single restaurant resource in the collection by ID
     *
     * Edit a restaurant by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editRestaurantTest() throws ApiException {
        String name = null;
        Integer parkId = null;
        Boolean quickService = null;
        Boolean tableService = null;
        Boolean alcohol = null;
        Boolean diningPlan = null;
        List<String> mealTypes = null;
        List<String> foodTypes = null;
        api.editRestaurant(name, parkId, quickService, tableService, alcohol, diningPlan, mealTypes, foodTypes);

        // TODO: test validations
    }
    
    /**
     * List a single restaurant resource from the collection by ID
     *
     * Get a single restaurant resource by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRestaurantTest() throws ApiException {
        InlineResponse2005 response = api.getRestaurant();

        // TODO: test validations
    }
    
    /**
     * List restaurants at Walt Disney World
     *
     * Get a list of restaurants at all parks
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getRestaurantsTest() throws ApiException {
        InlineResponse2004 response = api.getRestaurants();

        // TODO: test validations
    }
    
}
