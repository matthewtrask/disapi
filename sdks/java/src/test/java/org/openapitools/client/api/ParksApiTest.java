/*
 * Walt Disney World API
 * An api that encompasses the Walt Disney World Resort parks, rides, resorts, and restaurants. This API follows the OpenAPI standard.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@disapi.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.InlineResponse2006;
import org.openapitools.client.model.InlineResponse2007;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ParksApi
 */
@Ignore
public class ParksApiTest {

    private final ParksApi api = new ParksApi();

    
    /**
     * Create a new park resource in the collection
     *
     * Create a new park at Walt Disney World
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createParkTest() throws ApiException {
        String name = null;
        String centralAttraction = null;
        Integer yearOpened = null;
        Integer rideCount = null;
        Integer restaurantCount = null;
        Integer resortCount = null;
        Integer size = null;
        Boolean fireworks = null;
        api.createPark(name, centralAttraction, yearOpened, rideCount, restaurantCount, resortCount, size, fireworks);

        // TODO: test validations
    }
    
    /**
     * Remove a resource from the collection
     *
     * Remove a resource from the collection by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteParkTest() throws ApiException {
        api.deletePark();

        // TODO: test validations
    }
    
    /**
     * Edit a resource by ID
     *
     * Edit a park resource by an ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void editParkTest() throws ApiException {
        api.editPark();

        // TODO: test validations
    }
    
    /**
     * List a park by ID
     *
     * Get a park at Walt Disney World by ID
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getParkTest() throws ApiException {
        InlineResponse2007 response = api.getPark();

        // TODO: test validations
    }
    
    /**
     * List all parks at Walt Disney World
     *
     * Get a list of all parks at Walt Disney World
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getParksTest() throws ApiException {
        InlineResponse2006 response = api.getParks();

        // TODO: test validations
    }
    
}
