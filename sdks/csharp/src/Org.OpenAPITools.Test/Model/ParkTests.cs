/* 
 * Walt Disney World API
 *
 * An api that encompasses the Walt Disney World Resort parks, rides, resorts, and restaurants. This API follows the OpenAPI standard.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@disapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing Park
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ParkTests
    {
        // TODO uncomment below to declare an instance variable for Park
        //private Park instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of Park
            //instance = new Park();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of Park
        /// </summary>
        [Test]
        public void ParkInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" Park
            //Assert.IsInstanceOfType<Park> (instance, "variable 'instance' is a Park");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'CentralAttraction'
        /// </summary>
        [Test]
        public void CentralAttractionTest()
        {
            // TODO unit test for the property 'CentralAttraction'
        }
        /// <summary>
        /// Test the property 'YearOpened'
        /// </summary>
        [Test]
        public void YearOpenedTest()
        {
            // TODO unit test for the property 'YearOpened'
        }
        /// <summary>
        /// Test the property 'RideCount'
        /// </summary>
        [Test]
        public void RideCountTest()
        {
            // TODO unit test for the property 'RideCount'
        }
        /// <summary>
        /// Test the property 'RestaurantCount'
        /// </summary>
        [Test]
        public void RestaurantCountTest()
        {
            // TODO unit test for the property 'RestaurantCount'
        }
        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Test]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }
        /// <summary>
        /// Test the property 'ResortCount'
        /// </summary>
        [Test]
        public void ResortCountTest()
        {
            // TODO unit test for the property 'ResortCount'
        }
        /// <summary>
        /// Test the property 'Fireworks'
        /// </summary>
        [Test]
        public void FireworksTest()
        {
            // TODO unit test for the property 'Fireworks'
        }

    }

}
