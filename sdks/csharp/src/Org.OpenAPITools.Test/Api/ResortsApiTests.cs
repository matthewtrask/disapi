/* 
 * Walt Disney World API
 *
 * An api that encompasses the Walt Disney World Resort parks, rides, resorts, and restaurants. This API follows the OpenAPI standard.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: support@disapi.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test
{
    /// <summary>
    ///  Class for testing ResortsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ResortsApiTests
    {
        private ResortsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ResortsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ResortsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ResortsApi
            //Assert.IsInstanceOfType(typeof(ResortsApi), instance, "instance is a ResortsApi");
        }

        
        /// <summary>
        /// Test CreateResort
        /// </summary>
        [Test]
        public void CreateResortTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //int? parkId = null;
            //int? openingYear = null;
            //string resortType = null;
            //string transportOptions = null;
            //string category = null;
            //int? numOfRooms = null;
            //bool? quickServiceRestaurants = null;
            //bool? tableServiceRestaurants = null;
            //bool? giftShop = null;
            //bool? arcade = null;
            //bool? pool = null;
            //instance.CreateResort(name, parkId, openingYear, resortType, transportOptions, category, numOfRooms, quickServiceRestaurants, tableServiceRestaurants, giftShop, arcade, pool);
            
        }
        
        /// <summary>
        /// Test DeleteResort
        /// </summary>
        [Test]
        public void DeleteResortTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //instance.DeleteResort();
            
        }
        
        /// <summary>
        /// Test EditResort
        /// </summary>
        [Test]
        public void EditResortTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //int? parkId = null;
            //int? openingYear = null;
            //string resortType = null;
            //string transportOptions = null;
            //string category = null;
            //int? numOfRooms = null;
            //bool? quickServiceRestaurants = null;
            //bool? tableServiceRestaurants = null;
            //bool? giftShop = null;
            //bool? arcade = null;
            //bool? pool = null;
            //instance.EditResort(name, parkId, openingYear, resortType, transportOptions, category, numOfRooms, quickServiceRestaurants, tableServiceRestaurants, giftShop, arcade, pool);
            
        }
        
        /// <summary>
        /// Test GetResort
        /// </summary>
        [Test]
        public void GetResortTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //int? parkId = null;
            //int? openingYear = null;
            //string resortType = null;
            //string transportOptions = null;
            //string category = null;
            //int? numOfRooms = null;
            //bool? quickServiceRestaurants = null;
            //bool? tableServiceRestaurants = null;
            //bool? giftShop = null;
            //bool? arcade = null;
            //bool? pool = null;
            //var response = instance.GetResort(name, parkId, openingYear, resortType, transportOptions, category, numOfRooms, quickServiceRestaurants, tableServiceRestaurants, giftShop, arcade, pool);
            //Assert.IsInstanceOf<InlineResponse2001> (response, "response is InlineResponse2001");
        }
        
        /// <summary>
        /// Test GetResorts
        /// </summary>
        [Test]
        public void GetResortsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetResorts();
            //Assert.IsInstanceOf<InlineResponse200> (response, "response is InlineResponse200");
        }
        
    }

}
